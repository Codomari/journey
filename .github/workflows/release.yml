name: Release

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Get version
        id: version
        run: |
          # Generate version based on date and commit count
          VERSION=$(date +%Y.%m.%d)-$(git rev-list --count HEAD)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"

      - name: Build binaries
        run: |
          # Create release directory
          mkdir -p release
          
          # Build for Linux AMD64
          GOOS=linux GOARCH=amd64 go build -o release/journey-linux-amd64
          
          # Build for Linux ARM64
          GOOS=linux GOARCH=arm64 go build -o release/journey-linux-arm64
          
          # Build for macOS AMD64
          GOOS=darwin GOARCH=amd64 go build -o release/journey-darwin-amd64
          
          # Build for macOS ARM64
          GOOS=darwin GOARCH=arm64 go build -o release/journey-darwin-arm64
          
          # Build for Windows AMD64
          GOOS=windows GOARCH=amd64 go build -o release/journey-windows-amd64.exe
          
          # Create archives
          cd release
          for binary in journey-*; do
            if [[ "$binary" == *.exe ]]; then
              zip "${binary%.exe}.zip" "$binary"
            else
              tar -czf "${binary}.tar.gz" "$binary"
            fi
          done
          cd ..

      - name: Generate release notes
        id: release_notes
        run: |
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%an)" --no-merges)
          else
            COMMITS=$(git log "${LAST_TAG}..HEAD" --pretty=format:"- %s (%an)" --no-merges)
          fi
          
          # Create release notes
          cat > release_notes.md << EOF
          ## What's Changed
          
          $COMMITS
          
          ## Downloads
          
          ### Linux
          - [journey-linux-amd64.tar.gz](https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/journey-linux-amd64.tar.gz) - Linux x86_64
          - [journey-linux-arm64.tar.gz](https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/journey-linux-arm64.tar.gz) - Linux ARM64
          
          ### macOS
          - [journey-darwin-amd64.tar.gz](https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/journey-darwin-amd64.tar.gz) - macOS Intel
          - [journey-darwin-arm64.tar.gz](https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/journey-darwin-arm64.tar.gz) - macOS Apple Silicon
          
          ### Windows
          - [journey-windows-amd64.zip](https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/journey-windows-amd64.zip) - Windows x86_64
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${LAST_TAG}...v${{ steps.version.outputs.VERSION }}
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: Release v${{ steps.version.outputs.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            release/*.tar.gz
            release/*.zip